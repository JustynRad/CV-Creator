{"version":3,"sources":["Components/General.js","Components/Education.js","Components/Experience.js","Components/Skills.js","App.js","index.js"],"names":["General","handleNameChange","e","setState","name","target","value","handleTitleChange","title","handlePhoneChange","phoneNum","handleEmailChange","email","handleLinkedInChange","linkedin","handleLocationChange","location","toggleEdit","prevState","edit","state","this","id","className","icon","faMobileAlt","faEnvelope","faLinkedin","faHome","type","onClick","htmlFor","onChange","hmtlFor","Component","Education","handleSchoolChange","school","handleDegreeChange","degree","handleStartDateChange","startDate","handleEndDateChange","endDate","handleRemove","key","newEducation","education","filter","onSubmitEducation","preventDefault","concat","uniqid","date","map","edu","placeholder","Experience","handleCompanyChange","company","handleDescChange","desc","newExperience","experience","exp","onSubmitExperience","Skills","handleSkillChange","skill","newSkills","skills","onSubmitSkill","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05b7b22b.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMobileAlt, faEnvelope, faHome } from '@fortawesome/free-solid-svg-icons';\nimport {  faLinkedin} from '@fortawesome/free-brands-svg-icons';\nclass General extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            name: \"\",\n            title: \"\",\n            phoneNum: \"\",\n            email: \"\",\n            linkedin: \"\",\n            location: \"\",\n            edit: false\n        };\n    }\n\n    handleNameChange = (e) => {\n        this.setState({\n            name: e.target.value\n        })\n    }\n\n    handleTitleChange = (e) => {\n        this.setState({\n            title: e.target.value\n        })\n    }\n\n    handlePhoneChange = (e) => {\n        this.setState({\n            phoneNum: e.target.value\n        })\n    }\n\n    handleEmailChange = (e) => {\n        this.setState({\n           email: e.target.value \n        })\n    }\n\n    handleLinkedInChange = (e) => {\n        this.setState({\n            linkedin: e.target.value\n        })\n    }\n\n    handleLocationChange = (e) => {\n        this.setState({\n            location: e.target.value\n        })\n    }\n\n    toggleEdit = () => {\n        this.setState(prevState => ({\n            edit: !prevState.edit\n        }))\n    }\n\n    render() {\n        const { name, title, phoneNum, email, linkedin, location, edit } = this.state;\n\n        return (\n            <div id=\"General\">\n                <h1 className = \"name\">{name ? name: 'Your name'}</h1>\n                <p className=\"title\">{title ? title: 'Your title'}</p>\n                <div className = \"gen-info\">\n                    <p className=\"phone-num\">{phoneNum ? <Fragment><FontAwesomeIcon icon={faMobileAlt}/> {phoneNum}</Fragment>: <Fragment><FontAwesomeIcon icon={faMobileAlt}/> 555-555-5555</Fragment>}</p>\n                    <p className=\"email\">{email ? <Fragment><FontAwesomeIcon icon={faEnvelope}/> {email}</Fragment> : <Fragment><FontAwesomeIcon icon={faEnvelope}/> yourEmail@website.com</Fragment>}</p>\n                    <p className=\"linked-in\">{linkedin ? <Fragment><FontAwesomeIcon icon={faLinkedin}/> {linkedin}</Fragment> : <Fragment><FontAwesomeIcon icon={faLinkedin}/> Your LinkedIn Username </Fragment>}</p>\n                    <p className=\"location\">{location ? <Fragment><FontAwesomeIcon icon={faHome}/> {location}</Fragment> : <Fragment><FontAwesomeIcon icon={faHome}/> Your City, State </Fragment>}</p>\n                    <button className=\"edit-toggle\" type=\"button\" onClick={this.toggleEdit}>\n                        Edit\n                    </button>\n                </div>\n\n                {edit &&\n                    <form id=\"general-edit\" className=\"edit-form\">\n                        <label htmlFor=\"name\">Your Name</label>\n                        <input id=\"name\" type=\"text\" onChange={this.handleNameChange}/>\n                        <label htmlFor=\"title\">Your Job Title</label>\n                        <input id=\"title\" type=\"text\" onChange={this.handleTitleChange}/>\n                        <label htmlFor=\"phone-num\">Your Number</label>\n                        <input id=\"phone-num\" type=\"text\" onChange={this.handlePhoneChange}/>\n                        <label htmlFor=\"email\">Your Email</label>\n                        <input id=\"email\" type=\"text\" onChange={this.handleEmailChange}/>\n                        <label hmtlFor=\"linked-in\">Your LinkedIn Username</label>\n                        <input id=\"linked-in\" type=\"text\" onChange={this.handleLinkedInChange}/>\n                        <label htmlFor=\"location\">Your City</label>\n                        <input id=\"location\" type=\"text\" onChange={this.handleLocationChange}/>\n\n                        <button type=\"button\" onClick={this.toggleEdit}>\n                            Close Edit\n                        </button>\n                    </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default General;","import React, { Component } from 'react';\nimport uniqid from 'uniqid';\n\nclass Education extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            school: \"\",\n            degree: \"\",\n            startDate: \"\",\n            endDate: \"\",\n            location: \"\",\n            education: [\n                {\n                    id: uniqid(),\n                    school: \"Test University\",\n                    degree: \"B.S Computer Science\",\n                    date: \"Sept 2021 - Present\",\n                    location: \"San Diego, CA\",\n                },\n                {\n                    id: uniqid(),\n                    school: \"Test Community College\",\n                    degree: \"A.S Computer Science\",\n                    date: \"Sept 2019 - Sept 2021\",\n                    location: \"San Diego, CA\",\n                }\n            ],\n            edit: false,\n        }\n    }\n\n    handleSchoolChange = (e) => {\n        this.setState({\n            school: e.target.value\n        })\n    }\n\n    handleDegreeChange = (e) => {\n        this.setState({\n            degree: e.target.value\n        })\n    }\n\n    handleStartDateChange = (e) => {\n        this.setState({\n            startDate: e.target.value\n        })\n    }\n\n    handleEndDateChange = (e) => {\n        this.setState({\n            endDate: e.target.value\n        })\n    }\n\n    handleLocationChange = (e) => {\n        this.setState({\n            location: e.target.value\n        })\n    }\n\n    handleRemove = (key) => {\n        const newEducation = this.state.education.filter(education => education.id !== key)\n\n        this.setState({\n            education: newEducation\n        })\n    }\n\n    toggleEdit = () => {\n        this.setState(prevState => ({\n            edit: !prevState.edit\n        }))\n    }\n\n    onSubmitEducation = (e) => {\n        e.preventDefault();\n        this.setState({\n            education: this.state.education.concat({\n                id: uniqid(),\n                school: this.state.school,\n                degree: this.state.degree,\n                date: this.state.startDate + ' - ' + this.state.endDate,\n                location: this.state.location\n            }),\n            school: \"\",\n            degree: \"\",\n            startDate: \"\",\n            endDate: \"\",\n            location: \"\",\n        })\n\n        this.toggleEdit()\n    }\n\n    render() {\n        const { school, degree, startDate, endDate, location, education, edit } = this.state;\n\n        return (\n            <div id=\"Education\">\n                <h2>Education</h2>\n                {education.map(edu => {\n                    return(\n                        <div>\n                        {/* <div key={edu.id} onClick={() => this.handleRemove(edu.id)}> */}\n                            <div>\n                                <p className=\"education-school\">{edu.school}</p>\n                                <p className=\"education-degree\">{edu.degree}</p>\n                            </div>\n                            <div>\n                                <p className=\"education-location\">{edu.location}</p>\n                                <p className=\"education-date\">{edu.date}</p>\n                            </div>\n                            <button id=\"del-toggle\" className=\"edit-toggle\" key={edu.id} onClick={() => this.handleRemove(edu.id)}>\n                                Delete\n                            </button>\n                        </div>\n                    )\n                })}\n\n\n                <button className=\"edit-toggle\" type=\"button\" onClick={this.toggleEdit}>\n                    Add\n                </button>\n\n                {edit &&\n                    <form id=\"education-add\" className=\"edit-form\">\n                        <label htmlFor=\"school\">School</label>\n                        <input id=\"school\" type=\"text\" value={school} onChange={this.handleSchoolChange}/>\n\n                        <label htmlFor=\"degree\">Degree</label>\n                        <input id=\"degree\" type=\"text\" value={degree} onChange={this.handleDegreeChange}/>\n\n                        <label htmlFor=\"start-date\">Start Date</label>\n                        <input id=\"start-date\" type=\"text\" placeholder=\"Month &amp; Year\" value={startDate} onChange={this.handleStartDateChange}/>\n\n                        <label hmtlFor=\"end-date\">End Date</label>\n                        <input id=\"end-date\" type=\"text\"  placeholder=\"Month &amp; Year\" value={endDate} onChange={this.handleEndDateChange}/>\n\n                        <label htmlFor=\"location\">Location</label>\n                        <input id=\"location\" type=\"text\" value={location} onChange={this.handleLocationChange}/>\n\n                        <button type=\"button\" onClick={this.onSubmitEducation}>\n                            Add Education\n                        </button>\n\n                        <button type=\"button\" onClick={this.toggleEdit}>\n                            Close\n                        </button>\n                    </form>\n                }\n\n            </div>\n        )\n    }\n}\n\nexport default Education;","import React, { Component } from \"react\";\nimport uniqid from 'uniqid';\n\nclass Experience extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            company: \"\",\n            title: \"\",\n            startDate: \"\",\n            endDate: \"\",\n            location: \"\",\n            desc: \"\",\n            experience: [\n                {\n                    id: uniqid(),\n                    company: \"New Grad Current Company\",\n                    title: \"Full Stack Developer\",\n                    date: \"Aug 2020 - Present\",\n                    location: \"San Diego, CA\",\n                    desc: \"Description of job at New Grad Current Company\",\n                },\n                {\n                    id: uniqid(),\n                    company: \"New Grad First Company\",\n                    title: \"Full Stack Developer\",\n                    date: \"Aug 2017 - Nov 2019\",\n                    location: \"San Diego, CA\",\n                    desc: \"Description of the job at New Grad First Company\",\n                }\n            ],\n            edit: false\n        };\n    }\n\n    handleCompanyChange = (e) => {\n        this.setState({\n            company: e.target.value\n        })\n    }\n\n    handleTitleChange = (e) => {\n        this.setState({\n            title: e.target.value\n        })\n    }\n\n    handleStartDateChange = (e) => {\n        this.setState({\n            startDate: e.target.value\n        })\n    }\n\n    handleEndDateChange = (e) => {\n        this.setState({\n            endDate: e.target.value\n        })\n    }\n\n    handleLocationChange = (e) => {\n        this.setState({\n            location: e.target.value\n        })\n    }\n\n    handleDescChange = (e) => {\n        this.setState({\n            desc: e.target.value\n        })\n    }\n\n    handleRemove = (key) => {\n        const newExperience = this.state.experience.filter(exp => exp.id !== key)\n\n        this.setState({\n            experience: newExperience\n        })\n    }\n\n    toggleEdit = () => {\n        this.setState(prevState => ({\n            edit: !prevState.edit\n        }))\n    }\n\n    onSubmitExperience = (e) => {\n        e.preventDefault();\n        \n        this.setState({\n            experience: this.state.experience.concat({\n                id: uniqid(),\n                company: this.state.company,\n                title: this.state.title,\n                date: this.state.startDate + ' - ' + this.state.endDate,\n                location: this.state.location,\n                desc: this.state.desc\n            }),\n            company: \"\",\n            title: \"\",\n            startDate: \"\",\n            endDate: \"\",\n            location: \"\",\n            desc: \"\",\n        })\n\n        this.toggleEdit()\n    }\n\n    render() {\n        const { company, title, startDate, endDate, location, desc, experience, edit } = this.state;\n\n        return (\n            <div id=\"Experience\">\n                <h2>Experience</h2>\n                {experience.map(exp => {\n                    return (\n                        <div>\n                        {/* <div key={exp.id} onClick={() => this.handleRemove(exp.id)}> */}\n                            <div>\n                                <p className=\"experience-date\">{exp.date}</p>\n                                <p className=\"experience-title\">{exp.title}</p>\n                            </div>\n                            <div>\n                                <p className=\"experience-company\">{exp.company}</p>\n                                <p className=\"experience-location\">{exp.location}</p>\n                                <p className=\"experience-desc\">{exp.desc}</p>\n                            </div>\n                            <button id=\"del-toggle\" className=\"edit-toggle\" key={exp.id} onClick={() => this.handleRemove(exp.id)}>\n                                Delete\n                            </button>\n                            \n                        </div>\n                    )\n                })}\n                \n                <button className=\"edit-toggle\" type=\"button\" onClick={this.toggleEdit}>\n                    Add\n                </button>\n\n                {edit &&\n                    <form id=\"experience-add\" className=\"edit-form\">\n                        <label htmlFor=\"company\">Company</label>\n                        <input id=\"company\" type=\"text\" value={company} onChange={this.handleCompanyChange}/>\n\n                        <label htmlFor=\"title\">Title</label>\n                        <input id=\"title\" type=\"text\" value={title} onChange={this.handleTitleChange}/>\n\n                        <label htmlFor=\"start-date\">Start Date</label>\n                        <input id=\"start-date\" type=\"text\" placeholder=\"Month &amp; Year\" value={startDate} onChange={this.handleStartDateChange}/>\n\n                        <label htmlFor=\"end-date\">End Date</label>\n                        <input id=\"end-date\" type=\"text\" placeholder=\"Month &amp; Year\" value={endDate} onChange={this.handleEndDateChange}/>\n\n                        <label htmlFor=\"location\">Location</label>\n                        <input id=\"location\" type=\"text\" value={location} onChange={this.handleLocationChange}/>\n\n                        <label htmlFor=\"desc\">Description</label>\n                        <input id=\"desc\" type=\"text\" value={desc} onChange={this.handleDescChange}/>\n\n                        <button type=\"button\" onClick={this.onSubmitExperience}>\n                            Add Experience\n                        </button>\n\n                        <button type=\"button\" onClick={this.toggleEdit}>\n                            Close\n                        </button>\n                    </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Experience;","import React, { Component } from \"react\";\nimport uniqid from 'uniqid';\n\nclass Skills extends Component {\n    constructor() {\n        super();\n\n        this.state= {\n            skill: '',\n            skills: [\n                {\n                    id: uniqid(),\n                    skill: 'Creative thinking'\n                },\n                {\n                    id: uniqid(),\n                    skill: 'Communication'\n                },\n                {\n                    id: uniqid(),\n                    skill: 'Proactive'\n                },\n            ],\n            edit: false\n        }\n    }\n\n    handleSkillChange = e => {\n        this.setState({\n            skill: e.target.value\n        })\n    }\n\n    handleRemove = key => {\n        const newSkills = this.state.skills.filter(skill => skill.id !== key)\n\n        this.setState({\n            skills: newSkills\n        })\n    }\n\n    toggleEdit = () => {\n        this.setState(prevState => ({\n            edit: !prevState.edit\n        }))\n    }\n\n    onSubmitSkill = e => {\n        e.preventDefault();\n        this.setState({\n            skills: this.state.skills.concat({\n                id: uniqid(),\n                skill: this.state.skill\n            }),\n            skill: ''\n        })\n\n        this.toggleEdit()\n    }\n\n    render() {\n        const {\n            skill,\n            skills,\n            edit\n        } = this.state;\n\n        return (\n            <div id=\"Skills\">\n                <h2>Skills</h2>\n                    {skills.map(skill => {\n                        return(\n                            <div>\n                            <li>{skill.skill}</li>\n                            <button id=\"del-toggle\" className=\"edit-toggle\" key={skill.id} onClick={() => this.handleRemove(skill.id)}>\n                                Delete\n                            </button>\n                            </div>\n                        )\n                    })}\n\n                <button\n                    className=\"edit-toggle\"\n                    type=\"button\"\n                    onClick={this.toggleEdit}\n                >\n                    Add\n                </button>\n\n                {edit &&\n                    <form id=\"skill-add\" className=\"edit-form\">\n                        <label htmlFor=\"skill\">Skill</label>\n                        <input\n                            id=\"skill\"\n                            type=\"text\"\n                            value={skill}\n                            onChange={this.handleSkillChange}\n                        />\n                        <button\n                            type=\"button\"\n                            onClick={this.onSubmitSkill}\n                        >\n                            Add Skill\n                        </button>\n                        <button\n                            type=\"button\"\n                            onClick={this.toggleEdit}\n                        >\n                            Close\n                        </button>\n                    </form>\n                }\n            </div>\n        )\n    }\n\n}\n\nexport default Skills;","import React, { Component } from 'react';\nimport General from './Components/General'\nimport Education from './Components/Education'\nimport Experience from './Components/Experience'\nimport Skills from './Components/Skills'\nimport \"./styles/styles.css\"\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"App\">\n        <main>\n          <General />\n          <Education />\n          <Experience />\n          <Skills />\n        </main>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}